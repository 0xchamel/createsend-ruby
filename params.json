{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# createsend [![Build Status](https://secure.travis-ci.org/campaignmonitor/createsend-ruby.png)][travis] [![Dependency Status](https://gemnasium.com/campaignmonitor/createsend-ruby.png)][gemnasium]\r\nA ruby library which implements the complete functionality of v3 of the [Campaign Monitor API](http://www.campaignmonitor.com/api/).\r\n\r\n[travis]: http://travis-ci.org/campaignmonitor/createsend-ruby\r\n[gemnasium]: https://gemnasium.com/campaignmonitor/createsend-ruby\r\n\r\n## Installation\r\n\r\n    gem install createsend\r\n\r\n## Examples\r\n\r\n### Basic usage\r\nRetrieve a list of all your clients.\r\n\r\n    require 'createsend'\r\n\r\n    CreateSend.api_key 'your_api_key'\r\n\r\n    cs = CreateSend::CreateSend.new\r\n    clients = cs.clients\r\n    \r\n    clients.each do |c|\r\n      puts \"#{c.ClientID}: #{c.Name}\"\r\n    end\r\n\r\nResults in:\r\n    \r\n    4a397ccaaa55eb4e6aa1221e1e2d7122: Client One\r\n    a206def0582eec7dae47d937a4109cb2: Client Two\r\n\r\n### Handling errors\r\nIf the createsend API returns an error, an exception will be thrown. For example, if you attempt to create a campaign and enter empty values for subject etc:\r\n\r\n    require 'createsend'\r\n\r\n    CreateSend.api_key 'your_api_key'\r\n\r\n    begin\r\n      cl = CreateSend::Client.new \"4a397ccaaa55eb4e6aa1221e1e2d7122\"\r\n      id = CreateSend::Campaign.create cl.client_id, \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], []\r\n      puts \"New campaign ID: #{id}\"\r\n      rescue CreateSend::BadRequest => br\r\n        puts \"Bad request error: #{br}\"\r\n        puts \"Error Code:    #{br.data.Code}\"\r\n        puts \"Error Message: #{br.data.Message}\"\r\n      rescue Exception => e\r\n        puts \"Error: #{e}\"\r\n    end\r\n\r\nResults in:\r\n\r\n    Bad request error: The CreateSend API responded with the following error - 304: Campaign Subject Required\r\n    Error Code:    304\r\n    Error Message: Campaign Subject Required\r\n\r\n### Expected input and output\r\nThe best way of finding out the expected input and output of a particular method in a particular class is to use the unit tests as a reference.\r\n\r\nFor example, if you wanted to find out how to call the CreateSend::Subscriber.add method, you would look at the file test/subscriber_test.rb\r\n\r\n    should \"add a subscriber with custom fields\" do\r\n      stub_post(@api_key, \"subscribers/#{@list_id}.json\", \"add_subscriber.json\")\r\n      custom_fields = [ { :Key => 'website', :Value => 'http://example.com/' } ]\r\n      email_address = CreateSend::Subscriber.add @list_id, \"subscriber@example.com\", \"Subscriber\", custom_fields, true\r\n      email_address.should == \"subscriber@example.com\"\r\n    end\r\n\r\n## Contributing\r\n1. Fork the repository\r\n2. Make your changes, including tests for your changes.\r\n3. Ensure that the build passes, by running `bundle exec rake` (CI runs on: `1.8.7`, `1.9.2`, `1.9.3`, and `ree`)\r\n4. It should go without saying, but do not increment the version number in your commits.\r\n5. Submit a pull request.","name":"createsend-ruby","tagline":"A ruby library for v3 of the createsend API"}